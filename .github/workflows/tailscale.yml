name: Build IPK2 tailscale

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout the repository
      uses: actions/checkout@v3

    - name: Set up environment
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libncurses5-dev zlib1g-dev gawk git ccache gettext libssl-dev xsltproc wget unzip python3

    - name: Download OpenWrt SDK
      run: |
        wget https://downloads.openwrt.org/releases/21.02.3/targets/x86/64/openwrt-sdk-21.02.3-x86-64_gcc-8.4.0_musl.Linux-x86_64.tar.xz
        tar -xJf openwrt-sdk-21.02.3-x86-64_gcc-8.4.0_musl.Linux-x86_64.tar.xz
        mv openwrt-sdk-21.02.3-x86-64_gcc-8.4.0_musl.Linux-x86_64 openwrt-sdk

    - name: Update and install feeds
      run: |
        cd openwrt-sdk
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Clone luci-app-tailscale
      run: |
        cd openwrt-sdk/package
        git clone --depth 1 --branch https://github.com/asvow/luci-app-tailscale.git luci-app-tailscale

    - name: Configure build
      run: |
        cd openwrt-sdk
        make defconfig
        # Select the package LuCI -> Applications -> luci-app-tinyfilemanager
        echo "CONFIG_PACKAGE_luci-app-tailscale=y" >> .config
        make defconfig

    - name: Compile luci-app-tailscale
      run: |
        cd openwrt-sdk
        make package/luci-app-tailscale/compile V=99

    - name: List compiled files
      run: |
        cd openwrt-sdk
        find bin -name "*.ipk"

    - name: Upload IPK package
      uses: actions/upload-artifact@v3
      with:
        name: luci-app-tailscale
        path: |
          openwrt-sdk/bin/packages/**/luci-app-tailscale_*.ipk

    - name: Zip packages
      run: |
        echo -e "testing" >> release.txt

    - name: Upload packages
      uses: ncipollo/release-action@main
      with:
        token: ${{ secrets.RELEASES_TOKEN }}
        artifacts: "openwrt-sdk/bin/packages/**/luci-app-tailscale_*.ipk"
        allowUpdates: true
        replacesArtifacts: true
        bodyFile: "release.txt"
        tag: "x86"
